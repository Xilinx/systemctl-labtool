##################################################################################
# Copyright (c) 2012 - 2021 Xilinx, Inc.  All rights reserved.
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH
# THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#####################################################################################

namespace eval ::xsdb::mbtrace_dis {
    variable version 0.1

    # Opcode definitions
    variable INST_PC_OFFSET          1
    variable INST_NO_OFFSET          0

    variable IMMVAL_MASK_NON_SPECIAL 0x0000
    variable IMMVAL_MASK_MTS         0x4000
    variable IMMVAL_MASK_MFS         0x0000

    variable OPCODE_MASK_H           0xFC000000
    variable OPCODE_MASK_H1          0xFFE00000
    variable OPCODE_MASK_H2          0xFC1F0000
    variable OPCODE_MASK_H12         0xFFFF0000
    variable OPCODE_MASK_H4          0xFC0007FF
    variable OPCODE_MASK_H13S        0xFFE0E7F0
    variable OPCODE_MASK_H23S        0xFC1FC000
    variable OPCODE_MASK_H34         0xFC00FFFF
    variable OPCODE_MASK_H14         0xFFE007FF
    variable OPCODE_MASK_H24         0xFC1F07FF
    variable OPCODE_MASK_H124        0xFFFF07FF
    variable OPCODE_MASK_H1234       0xFFFFFFFF
    variable OPCODE_MASK_H3          0xFC000700
    variable OPCODE_MASK_H3B         0xFC00E600
    variable OPCODE_MASK_H32         0xFC00FC00
    variable OPCODE_MASK_H32B        0xFC00E000
    variable OPCODE_MASK_H34B        0xFC0004FF
    variable OPCODE_MASK_H23N        0xFC1F8000
    variable OPCODE_MASK_H34C        0xFC0007E0
    variable OPCODE_MASK_H8          0xFF000000

    variable DELAY_SLOT              1
    variable NO_DELAY_SLOT           0

    variable opcodes {
      {"add"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x00000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsub"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x04000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addc"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x08000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsubc"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x0C000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addk"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x10000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsubk"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"cmp"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000001 $OPCODE_MASK_H4    arithmetic_inst   }
      {"cmpu"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000003 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addkc"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x18000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsubkc"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x1C000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addi"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x20000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"rsubi"   INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x24000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"addic"   INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x28000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"rsubic"  INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x2C000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"addik"   INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x30000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"rsubik"  INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x34000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"addikc"  INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x38000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"rsubikc" INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x3C000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"mul"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x40000000 $OPCODE_MASK_H4    mult_inst         }
      {"mulh"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x40000001 $OPCODE_MASK_H4    mult_inst         }
      {"mulhu"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x40000003 $OPCODE_MASK_H4    mult_inst         }
      {"mulhsu"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x40000002 $OPCODE_MASK_H4    mult_inst         }
      {"idiv"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x48000000 $OPCODE_MASK_H4    div_inst          }
      {"idivu"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x48000002 $OPCODE_MASK_H4    div_inst          }
      {"bsll"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000400 $OPCODE_MASK_H3    barrel_shift_inst }
      {"bsra"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000200 $OPCODE_MASK_H3    barrel_shift_inst }
      {"bsrl"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000000 $OPCODE_MASK_H3    barrel_shift_inst }
      {"get"     INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C000000 $OPCODE_MASK_H32   anyware_inst      }
      {"put"     INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C008000 $OPCODE_MASK_H32   anyware_inst      }
      {"nget"    INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C004000 $OPCODE_MASK_H32   anyware_inst      }
      {"nput"    INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00C000 $OPCODE_MASK_H32   anyware_inst      }
      {"cget"    INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C002000 $OPCODE_MASK_H32   anyware_inst      }
      {"cput"    INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00A000 $OPCODE_MASK_H32   anyware_inst      }
      {"ncget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C006000 $OPCODE_MASK_H32   anyware_inst      }
      {"ncput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00E000 $OPCODE_MASK_H32   anyware_inst      }
      {"muli"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x60000000 $OPCODE_MASK_H     mult_inst         }
      {"bslli"   INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64000400 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bsrai"   INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64000200 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bsrli"   INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64000000 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bsefi"   INST_TYPE_RD_R1_IMM_IMM INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64004000 $OPCODE_MASK_H32B  barrel_shift_inst }
      {"bsifi"   INST_TYPE_RD_R1_IMM_IMM INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64008000 $OPCODE_MASK_H32B  barrel_shift_inst }
      {"or"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x80000000 $OPCODE_MASK_H4    logical_inst      }
      {"and"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x84000000 $OPCODE_MASK_H4    logical_inst      }
      {"xor"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x88000000 $OPCODE_MASK_H4    logical_inst      }
      {"andn"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x8C000000 $OPCODE_MASK_H4    logical_inst      }
      {"pcmpbf"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x80000400 $OPCODE_MASK_H4    logical_inst      }
      {"pcmpbc"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x84000400 $OPCODE_MASK_H4    logical_inst      }
      {"pcmpeq"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x88000400 $OPCODE_MASK_H4    logical_inst      }
      {"pcmpne"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x8C000400 $OPCODE_MASK_H4    logical_inst      }
      {"clz"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x900000E0 $OPCODE_MASK_H34   logical_inst      }
      {"swapb"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x900001E0 $OPCODE_MASK_H34   logical_inst      }
      {"swaph"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x900001E2 $OPCODE_MASK_H34   logical_inst      }
      {"sra"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000001 $OPCODE_MASK_H34   logical_inst      }
      {"src"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000021 $OPCODE_MASK_H34   logical_inst      }
      {"srl"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000041 $OPCODE_MASK_H34   logical_inst      }
      {"sext8"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000060 $OPCODE_MASK_H34   logical_inst      }
      {"sext16"  INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000061 $OPCODE_MASK_H34   logical_inst      }
      {"wic"     INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000068 $OPCODE_MASK_H34B  special_inst      }
      {"wdc"     INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000064 $OPCODE_MASK_H34B  special_inst      }
      {"wdc.flush " \
                 INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000074 $OPCODE_MASK_H34B  special_inst      }
      {"wdc.clear " \
                 INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000066 $OPCODE_MASK_H34B  special_inst      }
      {"wdc.clear.ea " \
                 INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x900000e6 $OPCODE_MASK_H34B  special_inst      }
      {"wdc.ext.flush " \
                 INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000476 $OPCODE_MASK_H34B  special_inst      }
      {"wdc.ext.clear " \
                 INST_TYPE_RD_R1_SPECIAL INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000466 $OPCODE_MASK_H34B  special_inst      }
      {"mts"     INST_TYPE_SPECIAL_R1    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_MTS         0x9400C000 $OPCODE_MASK_H13S  special_inst      }
      {"mfs"     INST_TYPE_RD_SPECIAL    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_MFS         0x94008000 $OPCODE_MASK_H23S  special_inst      }
      {"mfse"    INST_TYPE_RD_SPECIAL    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_MFS         0x94088000 $OPCODE_MASK_H23S  special_inst      }
      {"br"      INST_TYPE_R2            INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x98000000 $OPCODE_MASK_H124  branch_inst       }
      {"brd"     INST_TYPE_R2            INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x98100000 $OPCODE_MASK_H124  branch_inst       }
      {"brld"    INST_TYPE_RD_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x98140000 $OPCODE_MASK_H24   branch_inst       }
      {"bra"     INST_TYPE_R2            INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x98080000 $OPCODE_MASK_H124  branch_inst       }
      {"brad"    INST_TYPE_R2            INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x98180000 $OPCODE_MASK_H124  branch_inst       }
      {"brald"   INST_TYPE_RD_R2         INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x981C0000 $OPCODE_MASK_H24   branch_inst       }
      {"brk"     INST_TYPE_RD_R2         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x980C0000 $OPCODE_MASK_H24   branch_inst       }
      {"beq"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9C000000 $OPCODE_MASK_H14   branch_inst       }
      {"beqd"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9E000000 $OPCODE_MASK_H14   branch_inst       }
      {"bne"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9C200000 $OPCODE_MASK_H14   branch_inst       }
      {"bned"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9E200000 $OPCODE_MASK_H14   branch_inst       }
      {"blt"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9C400000 $OPCODE_MASK_H14   branch_inst       }
      {"bltd"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9E400000 $OPCODE_MASK_H14   branch_inst       }
      {"ble"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9C600000 $OPCODE_MASK_H14   branch_inst       }
      {"bled"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9E600000 $OPCODE_MASK_H14   branch_inst       }
      {"bgt"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9C800000 $OPCODE_MASK_H14   branch_inst       }
      {"bgtd"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9E800000 $OPCODE_MASK_H14   branch_inst       }
      {"bge"     INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9CA00000 $OPCODE_MASK_H14   branch_inst       }
      {"bged"    INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9EA00000 $OPCODE_MASK_H14   branch_inst       }
      {"ori"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xA0000000 $OPCODE_MASK_H     logical_inst      }
      {"andi"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xA4000000 $OPCODE_MASK_H     logical_inst      }
      {"xori"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xA8000000 $OPCODE_MASK_H     logical_inst      }
      {"andni"   INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xAC000000 $OPCODE_MASK_H     logical_inst      }
      {"imm"     INST_TYPE_IMM           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB0000000 $OPCODE_MASK_H12   immediate_inst    }
      {"rtsd"    INST_TYPE_R1_IMM        INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB6000000 $OPCODE_MASK_H1    return_inst       }
      {"rtid"    INST_TYPE_R1_IMM        INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB6200000 $OPCODE_MASK_H1    return_inst       }
      {"rtbd"    INST_TYPE_R1_IMM        INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB6400000 $OPCODE_MASK_H1    return_inst       }
      {"rted"    INST_TYPE_R1_IMM        INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB6800000 $OPCODE_MASK_H1    return_inst       }
      {"bri"     INST_TYPE_IMM           INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB8000000 $OPCODE_MASK_H12   branch_inst       }
      {"brid"    INST_TYPE_IMM           INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB8100000 $OPCODE_MASK_H12   branch_inst       }
      {"brlid"   INST_TYPE_RD_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB8140000 $OPCODE_MASK_H2    branch_inst       }
      {"brai"    INST_TYPE_IMM           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB8080000 $OPCODE_MASK_H12   branch_inst       }
      {"braid"   INST_TYPE_IMM           INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB8180000 $OPCODE_MASK_H12   branch_inst       }
      {"bralid"  INST_TYPE_RD_IMM        INST_NO_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xB81C0000 $OPCODE_MASK_H2    branch_inst       }
      {"brki"    INST_TYPE_RD_IMM        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB80C0000 $OPCODE_MASK_H2    branch_inst       }
      {"beqi"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBC000000 $OPCODE_MASK_H1    branch_inst       }
      {"beqid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBE000000 $OPCODE_MASK_H1    branch_inst       }
      {"bnei"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBC200000 $OPCODE_MASK_H1    branch_inst       }
      {"bneid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBE200000 $OPCODE_MASK_H1    branch_inst       }
      {"blti"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBC400000 $OPCODE_MASK_H1    branch_inst       }
      {"bltid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBE400000 $OPCODE_MASK_H1    branch_inst       }
      {"blei"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBC600000 $OPCODE_MASK_H1    branch_inst       }
      {"bleid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBE600000 $OPCODE_MASK_H1    branch_inst       }
      {"bgti"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBC800000 $OPCODE_MASK_H1    branch_inst       }
      {"bgtid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBE800000 $OPCODE_MASK_H1    branch_inst       }
      {"bgei"    INST_TYPE_R1_IMM        INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBCA00000 $OPCODE_MASK_H1    branch_inst       }
      {"bgeid"   INST_TYPE_R1_IMM        INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBEA00000 $OPCODE_MASK_H1    branch_inst       }
      {"beaeqi"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBD000000 $OPCODE_MASK_H1    branch_inst       }
      {"beaeqid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBF000000 $OPCODE_MASK_H1    branch_inst       }
      {"beanei"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBD200000 $OPCODE_MASK_H1    branch_inst       }
      {"beaneid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBF200000 $OPCODE_MASK_H1    branch_inst       }
      {"bealti"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBD400000 $OPCODE_MASK_H1    branch_inst       }
      {"bealtid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBF400000 $OPCODE_MASK_H1    branch_inst       }
      {"bealei"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBD600000 $OPCODE_MASK_H1    branch_inst       }
      {"bealeid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBF600000 $OPCODE_MASK_H1    branch_inst       }
      {"beagti"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBD800000 $OPCODE_MASK_H1    branch_inst       }
      {"beagtid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBF800000 $OPCODE_MASK_H1    branch_inst       }
      {"beagei"  INST_TYPE_R1_IMML       INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xBDA00000 $OPCODE_MASK_H1    branch_inst       }
      {"beageid" INST_TYPE_R1_IMML       INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0xBFA00000 $OPCODE_MASK_H1    branch_inst       }
      {"lbu"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC0000000 $OPCODE_MASK_H4    memory_load_inst  }
      {"lbur"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC0000200 $OPCODE_MASK_H4    memory_load_inst  }
      {"lbuea"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC0000080 $OPCODE_MASK_H4    memory_load_inst  }
      {"lhu"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC4000000 $OPCODE_MASK_H4    memory_load_inst  }
      {"lhur"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC4000200 $OPCODE_MASK_H4    memory_load_inst  }
      {"lhuea"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC4000080 $OPCODE_MASK_H4    memory_load_inst  }
      {"lw"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000000 $OPCODE_MASK_H4    memory_load_inst  }
      {"lwr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000200 $OPCODE_MASK_H4    memory_load_inst  }
      {"lwx"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000400 $OPCODE_MASK_H4    memory_load_inst  }
      {"lwea"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000080 $OPCODE_MASK_H4    memory_load_inst  }
      {"sb"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD0000000 $OPCODE_MASK_H4    memory_store_inst }
      {"sbr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD0000200 $OPCODE_MASK_H4    memory_store_inst }
      {"sbea"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD0000080 $OPCODE_MASK_H4    memory_store_inst }
      {"sh"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD4000000 $OPCODE_MASK_H4    memory_store_inst }
      {"shr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD4000200 $OPCODE_MASK_H4    memory_store_inst }
      {"shea"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD4000080 $OPCODE_MASK_H4    memory_store_inst }
      {"sw"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000000 $OPCODE_MASK_H4    memory_store_inst }
      {"swr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000200 $OPCODE_MASK_H4    memory_store_inst }
      {"swx"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000400 $OPCODE_MASK_H4    memory_store_inst }
      {"swea"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000080 $OPCODE_MASK_H4    memory_store_inst }
      {"lbui"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xE0000000 $OPCODE_MASK_H     memory_load_inst  }
      {"lhui"    INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xE4000000 $OPCODE_MASK_H     memory_load_inst  }
      {"lwi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xE8000000 $OPCODE_MASK_H     memory_load_inst  }
      {"lli"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xEC000000 $OPCODE_MASK_H     memory_load_inst  }
      {"sbi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xF0000000 $OPCODE_MASK_H     memory_store_inst }
      {"shi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xF4000000 $OPCODE_MASK_H     memory_store_inst }
      {"swi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xF8000000 $OPCODE_MASK_H     memory_store_inst }
      {"sli"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xFC000000 $OPCODE_MASK_H     memory_store_inst }
      {"nop"     INST_TYPE_NONE          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x80000000 $OPCODE_MASK_H1234 logical_inst      }
      {"la"      INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x30000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"tuqula"  INST_TYPE_RD            INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x3000002A $OPCODE_MASK_H     arithmetic_inst   }
      {"not"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xA800FFFF $OPCODE_MASK_H34   logical_inst      }
      {"neg"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x04000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"rtb"     INST_TYPE_R1            INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB6000004 $OPCODE_MASK_H1    return_inst       }
      {"sub"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x04000000 $OPCODE_MASK_H     arithmetic_inst   }
      {"lmi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xE8000000 $OPCODE_MASK_H     memory_load_inst  }
      {"smi"     INST_TYPE_RD_R1_IMM     INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xF8000000 $OPCODE_MASK_H     memory_store_inst }
      {"msrset"  INST_TYPE_RD_IMM15      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x94100000 $OPCODE_MASK_H23N  special_inst      }
      {"msrclr"  INST_TYPE_RD_IMM15      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x94110000 $OPCODE_MASK_H23N  special_inst      }
      {"fadd"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000000 $OPCODE_MASK_H4    arithmetic_inst   }
      {"frsub"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000080 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fmul"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fdiv"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000180 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.lt" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000210 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.eq" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000220 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.le" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000230 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.gt" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000240 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.ne" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000250 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.ge" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000260 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fcmp.un" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000200 $OPCODE_MASK_H4    arithmetic_inst   }
      {"flt"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000280 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fint"    INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000300 $OPCODE_MASK_H4    arithmetic_inst   }
      {"fsqrt"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000380 $OPCODE_MASK_H4    arithmetic_inst   }

      {"tget"    INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C001000 $OPCODE_MASK_H32   anyware_inst      }
      {"tcget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C003000 $OPCODE_MASK_H32   anyware_inst      }
      {"tnget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C005000 $OPCODE_MASK_H32   anyware_inst      }
      {"tncget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C007000 $OPCODE_MASK_H32   anyware_inst      }
      {"tput"    INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C009000 $OPCODE_MASK_H32   anyware_inst      }
      {"tcput"   INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00B000 $OPCODE_MASK_H32   anyware_inst      }
      {"tnput"   INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00D000 $OPCODE_MASK_H32   anyware_inst      }
      {"tncput"  INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00F000 $OPCODE_MASK_H32   anyware_inst      }

      {"eget"    INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C000400 $OPCODE_MASK_H32   anyware_inst      }
      {"ecget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C002400 $OPCODE_MASK_H32   anyware_inst      }
      {"neget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C004400 $OPCODE_MASK_H32   anyware_inst      }
      {"necget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C006400 $OPCODE_MASK_H32   anyware_inst      }
      {"eput"    INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C008400 $OPCODE_MASK_H32   anyware_inst      }
      {"ecput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00A400 $OPCODE_MASK_H32   anyware_inst      }
      {"neput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00C400 $OPCODE_MASK_H32   anyware_inst      }
      {"necput"  INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00E400 $OPCODE_MASK_H32   anyware_inst      }

      {"teget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C001400 $OPCODE_MASK_H32   anyware_inst      }
      {"tecget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C003400 $OPCODE_MASK_H32   anyware_inst      }
      {"tneget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C005400 $OPCODE_MASK_H32   anyware_inst      }
      {"tnecget" INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C007400 $OPCODE_MASK_H32   anyware_inst      }
      {"teput"   INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C009400 $OPCODE_MASK_H32   anyware_inst      }
      {"tecput"  INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00B400 $OPCODE_MASK_H32   anyware_inst      }
      {"tneput"  INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00D400 $OPCODE_MASK_H32   anyware_inst      }
      {"tnecput" INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00F400 $OPCODE_MASK_H32   anyware_inst      }

      {"aget"    INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C000800 $OPCODE_MASK_H32   anyware_inst      }
      {"caget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C002800 $OPCODE_MASK_H32   anyware_inst      }
      {"naget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C004800 $OPCODE_MASK_H32   anyware_inst      }
      {"ncaget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C006800 $OPCODE_MASK_H32   anyware_inst      }
      {"aput"    INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C008800 $OPCODE_MASK_H32   anyware_inst      }
      {"caput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00A800 $OPCODE_MASK_H32   anyware_inst      }
      {"naput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00C800 $OPCODE_MASK_H32   anyware_inst      }
      {"ncaput"  INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00E800 $OPCODE_MASK_H32   anyware_inst      }

      {"taget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C001800 $OPCODE_MASK_H32   anyware_inst      }
      {"tcaget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C003800 $OPCODE_MASK_H32   anyware_inst      }
      {"tnaget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C005800 $OPCODE_MASK_H32   anyware_inst      }
      {"tncaget" INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C007800 $OPCODE_MASK_H32   anyware_inst      }
      {"taput"   INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C009800 $OPCODE_MASK_H32   anyware_inst      }
      {"tcaput"  INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00B800 $OPCODE_MASK_H32   anyware_inst      }
      {"tnaput"  INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00D800 $OPCODE_MASK_H32   anyware_inst      }
      {"tncaput" INST_TYPE_IMM7          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00F800 $OPCODE_MASK_H32   anyware_inst      }

      {"eaget"   INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C000C00 $OPCODE_MASK_H32   anyware_inst      }
      {"ecaget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C002C00 $OPCODE_MASK_H32   anyware_inst      }
      {"neaget"  INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C004C00 $OPCODE_MASK_H32   anyware_inst      }
      {"necaget" INST_TYPE_RD_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C006C00 $OPCODE_MASK_H32   anyware_inst      }
      {"eaput"   INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C008C00 $OPCODE_MASK_H32   anyware_inst      }
      {"ecaput"  INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00AC00 $OPCODE_MASK_H32   anyware_inst      }
      {"neaput"  INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00CC00 $OPCODE_MASK_H32   anyware_inst      }
      {"necaput" INST_TYPE_R1_IMM7       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00EC00 $OPCODE_MASK_H32   anyware_inst      }

      {"teaget"   INST_TYPE_RD_IMM7      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C001C00 $OPCODE_MASK_H32   anyware_inst      }
      {"tecaget"  INST_TYPE_RD_IMM7      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C003C00 $OPCODE_MASK_H32   anyware_inst      }
      {"tneaget"  INST_TYPE_RD_IMM7      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C005C00 $OPCODE_MASK_H32   anyware_inst      }
      {"tnecaget" INST_TYPE_RD_IMM7      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C007C00 $OPCODE_MASK_H32   anyware_inst      }
      {"teaput"   INST_TYPE_IMM7         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C009C00 $OPCODE_MASK_H32   anyware_inst      }
      {"tecaput"  INST_TYPE_IMM7         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00BC00 $OPCODE_MASK_H32   anyware_inst      }
      {"tneaput"  INST_TYPE_IMM7         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00DC00 $OPCODE_MASK_H32   anyware_inst      }
      {"tnecaput" INST_TYPE_IMM7         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6C00FC00 $OPCODE_MASK_H32   anyware_inst      }

      {"getd"     INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000000 $OPCODE_MASK_H34C  anyware_inst      }
      {"tgetd"    INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000080 $OPCODE_MASK_H34C  anyware_inst      }
      {"cgetd"    INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000100 $OPCODE_MASK_H34C  anyware_inst      }
      {"tcgetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000180 $OPCODE_MASK_H34C  anyware_inst      }
      {"ngetd"    INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000200 $OPCODE_MASK_H34C  anyware_inst      }
      {"tngetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000280 $OPCODE_MASK_H34C  anyware_inst      }
      {"ncgetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000300 $OPCODE_MASK_H34C  anyware_inst      }
      {"tncgetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000380 $OPCODE_MASK_H34C  anyware_inst      }
      {"putd"     INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000400 $OPCODE_MASK_H34C  anyware_inst      }
      {"tputd"    INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000480 $OPCODE_MASK_H34C  anyware_inst      }
      {"cputd"    INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000500 $OPCODE_MASK_H34C  anyware_inst      }
      {"tcputd"   INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000580 $OPCODE_MASK_H34C  anyware_inst      }
      {"nputd"    INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000600 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnputd"   INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000680 $OPCODE_MASK_H34C  anyware_inst      }
      {"ncputd"   INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000700 $OPCODE_MASK_H34C  anyware_inst      }
      {"tncputd"  INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000780 $OPCODE_MASK_H34C  anyware_inst      }

      {"egetd"    INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000020 $OPCODE_MASK_H34C  anyware_inst      }
      {"tegetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0000A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ecgetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000120 $OPCODE_MASK_H34C  anyware_inst      }
      {"tecgetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0001A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"negetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000220 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnegetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0002A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"necgetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000320 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnecgetd" INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0003A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"eputd"    INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000420 $OPCODE_MASK_H34C  anyware_inst      }
      {"teputd"   INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0004A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ecputd"   INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000520 $OPCODE_MASK_H34C  anyware_inst      }
      {"tecputd"  INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0005A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"neputd"   INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000620 $OPCODE_MASK_H34C  anyware_inst      }
      {"tneputd"  INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0006A0 $OPCODE_MASK_H34C  anyware_inst      }
      {"necputd"  INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000720 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnecputd" INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0007A0 $OPCODE_MASK_H34C  anyware_inst      }

      {"agetd"    INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000040 $OPCODE_MASK_H34C  anyware_inst      }
      {"tagetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0000C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"cagetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000140 $OPCODE_MASK_H34C  anyware_inst      }
      {"tcagetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0001C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"nagetd"   INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000240 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnagetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0002C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ncagetd"  INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000340 $OPCODE_MASK_H34C  anyware_inst      }
      {"tncagetd" INST_TYPE_RD_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0003C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"aputd"    INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000440 $OPCODE_MASK_H34C  anyware_inst      }
      {"taputd"   INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0004C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"caputd"   INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000540 $OPCODE_MASK_H34C  anyware_inst      }
      {"tcaputd"  INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0005C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"naputd"   INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000640 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnaputd"  INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0006C0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ncaputd"  INST_TYPE_R1_R2        INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000740 $OPCODE_MASK_H34C  anyware_inst      }
      {"tncaputd" INST_TYPE_R2           INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0007C0 $OPCODE_MASK_H34C  anyware_inst      }

      {"eagetd"    INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000060 $OPCODE_MASK_H34C  anyware_inst      }
      {"teagetd"   INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0000E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ecagetd"   INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000160 $OPCODE_MASK_H34C  anyware_inst      }
      {"tecagetd"  INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0001E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"neagetd"   INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000260 $OPCODE_MASK_H34C  anyware_inst      }
      {"tneagetd"  INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0002E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"necagetd"  INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000360 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnecagetd" INST_TYPE_RD_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0003E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"eaputd"    INST_TYPE_R1_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000460 $OPCODE_MASK_H34C  anyware_inst      }
      {"teaputd"   INST_TYPE_R2          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0004E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"ecaputd"   INST_TYPE_R1_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000560 $OPCODE_MASK_H34C  anyware_inst      }
      {"tecaputd"  INST_TYPE_R2          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0005E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"neaputd"   INST_TYPE_R1_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000660 $OPCODE_MASK_H34C  anyware_inst      }
      {"tneaputd"  INST_TYPE_R2          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0006E0 $OPCODE_MASK_H34C  anyware_inst      }
      {"necaputd"  INST_TYPE_R1_R2       INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C000760 $OPCODE_MASK_H34C  anyware_inst      }
      {"tnecaputd" INST_TYPE_R2          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x4C0007E0 $OPCODE_MASK_H34C  anyware_inst      }

      {"addl"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x00000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsubl"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x04000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addlc"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x08000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsublc"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x0C000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addlk"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x10000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsublk"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"addlkc"  INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x18000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"rsublkc" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x1C000100 $OPCODE_MASK_H4    arithmetic_inst   }
      {"cmpl"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000101 $OPCODE_MASK_H4    arithmetic_inst   }
      {"cmplu"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x14000103 $OPCODE_MASK_H4    arithmetic_inst   }
      {"mull"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x40000100 $OPCODE_MASK_H4    mult_inst         }
      {"bslll"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000500 $OPCODE_MASK_H3    barrel_shift_inst }
      {"bslra"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000300 $OPCODE_MASK_H3    barrel_shift_inst }
      {"bslrl"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x44000100 $OPCODE_MASK_H3    barrel_shift_inst }
      {"bsllli"  INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64002400 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bslrai"  INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64002200 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bslrli"  INST_TYPE_RD_R1_IMMS    INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64002000 $OPCODE_MASK_H3B   barrel_shift_inst }
      {"bslefi"  INST_TYPE_RD_R1_IMM_IMM INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x64006000 $OPCODE_MASK_H32B  barrel_shift_inst }
      {"bslifi"  INST_TYPE_RD_R1_IMM_IMM INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x6400A000 $OPCODE_MASK_H32B  barrel_shift_inst }
      {"orl"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x80000100 $OPCODE_MASK_H4    logical_inst      }
      {"andl"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x84000100 $OPCODE_MASK_H4    logical_inst      }
      {"xorl"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x88000100 $OPCODE_MASK_H4    logical_inst      }
      {"andnl"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x8C000100 $OPCODE_MASK_H4    logical_inst      }
      {"pcmplbf" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x80000500 $OPCODE_MASK_H4    logical_inst      }
      {"pcmpleq" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x88000500 $OPCODE_MASK_H4    logical_inst      }
      {"pcmplne" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x8C000500 $OPCODE_MASK_H4    logical_inst      }
      {"srla"    INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000101 $OPCODE_MASK_H34   logical_inst      }
      {"srlc"    INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000121 $OPCODE_MASK_H34   logical_inst      }
      {"srll"    INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000141 $OPCODE_MASK_H34   logical_inst      }
      {"sextl8"  INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000160 $OPCODE_MASK_H34   logical_inst      }
      {"sextl16" INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000161 $OPCODE_MASK_H34   logical_inst      }
      {"sextl32" INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x90000162 $OPCODE_MASK_H34   logical_inst      }
      {"beaeq"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D000000 $OPCODE_MASK_H14   branch_inst       }
      {"bealeq"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D000100 $OPCODE_MASK_H14   branch_inst       }
      {"beaeqd"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F000000 $OPCODE_MASK_H14   branch_inst       }
      {"bealeqd" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F000100 $OPCODE_MASK_H14   branch_inst       }
      {"beane"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D200000 $OPCODE_MASK_H14   branch_inst       }
      {"bealne"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D200100 $OPCODE_MASK_H14   branch_inst       }
      {"beaned"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F200000 $OPCODE_MASK_H14   branch_inst       }
      {"bealned" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F200100 $OPCODE_MASK_H14   branch_inst       }
      {"bealt"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D400000 $OPCODE_MASK_H14   branch_inst       }
      {"beallt"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D400100 $OPCODE_MASK_H14   branch_inst       }
      {"bealtd"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F400000 $OPCODE_MASK_H14   branch_inst       }
      {"bealltd" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F400100 $OPCODE_MASK_H14   branch_inst       }
      {"beale"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D600000 $OPCODE_MASK_H14   branch_inst       }
      {"bealle"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D600100 $OPCODE_MASK_H14   branch_inst       }
      {"bealed"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F600000 $OPCODE_MASK_H14   branch_inst       }
      {"bealled" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F600100 $OPCODE_MASK_H14   branch_inst       }
      {"beagt"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D800000 $OPCODE_MASK_H14   branch_inst       }
      {"bealgt"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9D800100 $OPCODE_MASK_H14   branch_inst       }
      {"beagtd"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F800000 $OPCODE_MASK_H14   branch_inst       }
      {"bealgtd" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9F800100 $OPCODE_MASK_H14   branch_inst       }
      {"beage"   INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9DA00000 $OPCODE_MASK_H14   branch_inst       }
      {"bealge"  INST_TYPE_R1_R2         INST_PC_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x9DA00100 $OPCODE_MASK_H14   branch_inst       }
      {"beaged"  INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9FA00000 $OPCODE_MASK_H14   branch_inst       }
      {"bealged" INST_TYPE_R1_R2         INST_PC_OFFSET  DELAY_SLOT    IMMVAL_MASK_NON_SPECIAL 0x9FA00100 $OPCODE_MASK_H14   branch_inst       }
      {"imml"    INST_TYPE_IMML          INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xB2000000 $OPCODE_MASK_H8    immediate_inst    }
      {"ll"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000100 $OPCODE_MASK_H4    memory_load_inst  }
      {"llr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xC8000300 $OPCODE_MASK_H4    memory_load_inst  }
      {"sl"      INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000100 $OPCODE_MASK_H4    memory_store_inst }
      {"slr"     INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0xD8000300 $OPCODE_MASK_H4    memory_store_inst }
      {"dadd"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000400 $OPCODE_MASK_H4    arithmetic_inst   }
      {"drsub"   INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000480 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dmul"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000500 $OPCODE_MASK_H4    arithmetic_inst   }
      {"ddiv"    INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000580 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.lt" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000610 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.eq" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000620 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.le" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000630 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.gt" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000640 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.ne" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000650 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.ge" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000660 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dcmp.un" INST_TYPE_RD_R1_R2      INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000600 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dbl"     INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000680 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dlong"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000700 $OPCODE_MASK_H4    arithmetic_inst   }
      {"dsqrt"   INST_TYPE_RD_R1         INST_NO_OFFSET  NO_DELAY_SLOT IMMVAL_MASK_NON_SPECIAL 0x58000780 $OPCODE_MASK_H4    arithmetic_inst   }
    }

    # Argument output procedures
    proc regRD {instr} {
      return [format {r%-2d} [expr ($instr >> 21) & 0x1f]]
    }

    proc regR1 {instr} {
      return [format {r%-2d} [expr ($instr >> 16) & 0x1f]]
    }

    proc regR2 {instr} {
      return [format {r%-2d} [expr ($instr >> 11) & 0x1f]]
    }

    proc imm {instr} {
      set value [expr $instr & 0xffff]
      return "[expr ($value & 0x8000) == 0 ? $value : $value - 65536]"
    }

    proc imms {instr} {
      set value [expr $instr & 0x3f]
      return "$value"
    }

    proc immw {instr} {
      if {$instr & 0x00004000} {
        set value [expr ($instr >> 6) & 0x3f]
      } else {
        set value [expr (($instr >> 6) & 0x3f) - ($instr & 0x3f) + 1]
      }
      return "$value"
    }

    proc imm7 {instr} {
      set value [expr $instr & 0x7f]
      return "$value"
    }

    proc imm15 {instr} {
      set value [expr $instr & 0x7fff]
      return "$value"
    }

    proc imml {instr} {
      set value [expr $instr & 0xffffff]
      return "$value"
    }

    proc spec1 {instr} {
      set value [expr $instr & 0x1807]
      if {$value == 0x0001} {return "rmsr"  }
      if {$value == 0x0007} {return "rfsr"  }
      if {$value == 0x0800} {return "rslr"  }
      if {$value == 0x0802} {return "rshr"  }
      if {$value == 0x1000} {return "rpid"  }
      if {$value == 0x1001} {return "rzpr"  }
      if {$value == 0x1002} {return "rtlbx" }
      if {$value == 0x1003} {return "rtlblo"}
      if {$value == 0x1004} {return "rtlbhi"}
      if {$value == 0x1005} {return "rtlbsx"}
      return "UNKNOWN=[format {0x%x} $value]"
    }

    proc spec2 {instr} {
      set value [expr $instr & 0x300F]
      if {$value == 0x0000} {return "pc"    }
      if {$value == 0x0001} {return "rmsr"  }
      if {$value == 0x0003} {return "rear"  }
      if {$value == 0x0005} {return "resr"  }
      if {$value == 0x0007} {return "rfsr"  }
      if {$value == 0x000B} {return "rbtr"  }
      if {$value == 0x000D} {return "redr"  }
      if {$value == 0x1000} {return "rpid"  }
      if {$value == 0x1001} {return "rzpr"  }
      if {$value == 0x1002} {return "rtlbx" }
      if {$value == 0x1003} {return "rtlblo"}
      if {$value == 0x1004} {return "rtlbhi"}
      if {$value == 0x2000} {return "rpvr0" }
      if {$value == 0x2001} {return "rpvr1" }
      if {$value == 0x2002} {return "rpvr2" }
      if {$value == 0x2003} {return "rpvr3" }
      if {$value == 0x2004} {return "rpvr4" }
      if {$value == 0x2005} {return "rpvr5" }
      if {$value == 0x2006} {return "rpvr6" }
      if {$value == 0x2007} {return "rpvr7" }
      if {$value == 0x2008} {return "rpvr8" }
      if {$value == 0x2009} {return "rpvr9" }
      if {$value == 0x200a} {return "rpvr10"}
      if {$value == 0x200b} {return "rpvr11"}
      return "UNKNOWN=[format {0x%x} $value]"
    }

    # Format register bit information
    proc reginfo {value bitnames} {
      set hexval 0x$value
      set text ""
      foreach bit $bitnames {
        if {($hexval & 1) == 1} {set text "$bit $text"}
        set hexval [expr $hexval >> 1]
      }
      if {[string length $text] > 0} {
        set text [string range $text 0 end-1]
        return "($text)"
      } else {
        return ""
      }
    }

    # Format exception kind information
    proc excinfo {kind} {
      switch $kind {
        0  {return "Fast Simplex Link Exception"}
        1  {return "Unaligned Exception"}
        2  {return "Illegal Opcode Exception"}
        3  {return "Instruction Bus Exception"}
        4  {return "Data Bus Exception"}
        5  {return "Divide Exception"}
        6  {return "FPU Exception"}
        7  {return "Privileged Instruction Exception"}
        9  {return "Debug Exception"}
        10 {return "Interrupt"}
        11 {return "External Non Maskable Break"}
        12 {return "External Maskable Break"}
        16 {return "Data Storage Exception"}
        17 {return "Instruction Storage Exception"}
        18 {return "Data TLB Miss Exception"}
        19 {return "Instruction TLB Miss Exception"}
      }
      return "Unknown Exception $kind"
    }

    # Disassembly procedure
    proc disassemble {pc instr {exception_taken 0} {exception_kind 0} {reg_write 0} {reg_addr 0} {new_reg_value ""} } {
      variable INST_PC_OFFSET
      variable INST_NO_OFFSET
      variable IMMVAL_MASK_NON_SPECIAL
      variable IMMVAL_MASK_MTS
      variable IMMVAL_MASK_MFS
      variable OPCODE_MASK_H
      variable OPCODE_MASK_H1
      variable OPCODE_MASK_H2
      variable OPCODE_MASK_H12
      variable OPCODE_MASK_H4
      variable OPCODE_MASK_H13S
      variable OPCODE_MASK_H23S
      variable OPCODE_MASK_H34
      variable OPCODE_MASK_H14
      variable OPCODE_MASK_H24
      variable OPCODE_MASK_H124
      variable OPCODE_MASK_H1234
      variable OPCODE_MASK_H3
      variable OPCODE_MASK_H3B
      variable OPCODE_MASK_H32
      variable OPCODE_MASK_H32B
      variable OPCODE_MASK_H34B
      variable OPCODE_MASK_H23N
      variable OPCODE_MASK_H34C
      variable OPCODE_MASK_H8
      variable DELAY_SLOT
      variable NO_DELAY_SLOT
      variable opcodes

      set opcode "invalid"
      # search for valid opcode
      foreach op $opcodes {
        set mask [expr [lindex $op 6]]
        set code [expr [lindex $op 5]]
        if {($code & $mask) == ($instr & $mask)} {
          set opcode $op
          break
        }
      }

      # valid opcode found, disassemble the opcode
      if {$opcode != "invalid"} {
          set mnemonic [lindex $opcode 0]

          # Arguments
          set type [lindex $opcode 1]
          set arg  ""
          switch $type {
            INST_TYPE_RD_R1_R2      {set arg "[regRD $instr], [regR1 $instr], [regR2 $instr]"}
            INST_TYPE_RD_R1_IMM     {set arg "[regRD $instr], [regR1 $instr], [imm   $instr]"}
            INST_TYPE_RD_R1         {set arg "[regRD $instr], [regR1 $instr]"                }
            INST_TYPE_RD_R2         {set arg "[regRD $instr], [regR2 $instr]"                }
            INST_TYPE_RD_IMM        {set arg "[regRD $instr], [imm   $instr]"                }
            INST_TYPE_R2            {set arg "[regR2 $instr]"                                }
            INST_TYPE_R1_R2         {set arg "[regR1 $instr], [regR2 $instr]"                }
            INST_TYPE_R1_IMM        {set arg "[regR1 $instr], [imm   $instr]"                }
            INST_TYPE_IMM           {set arg "[imm   $instr]"                                }
            INST_TYPE_SPECIAL_R1    {set arg "[spec1 $instr], [regR1 $instr]"                }
            INST_TYPE_RD_SPECIAL    {set arg "[regRD $instr], [spec2 $instr]"                }
            INST_TYPE_R1            {set arg "[regR1 $instr]"                                }
            INST_TYPE_RD_R1_IMMS    {set arg "[regRD $instr], [regR1 $instr], [imms  $instr]"}
            INST_TYPE_RD_R1_IMM_IMM {set arg "[regRD $instr], [regR1 $instr], [immw  $instr], [imms  $instr]"}
            INST_TYPE_RD_IMM7       {set arg "[regRD $instr], [imm7  $instr]"                }
            INST_TYPE_IMM7          {set arg "[imm7  $instr]"                                }
            INST_TYPE_R1_IMM7       {set arg "[regR1 $instr], [imm7  $instr]"                }
            INST_TYPE_RD_R1_SPECIAL {set arg "[regR1 $instr], [regR2 $instr]"                }
            INST_TYPE_RD_IMM15      {set arg "[regRD $instr], [imm15 $instr]"                }
            INST_TYPE_RD            {set arg "[regRD $instr]"                                }
            INST_TYPE_IMML          {set arg "[imml  $instr]"                                }
            INST_TYPE_R1_IMML       {set arg "[regR1 $instr], [imml  $instr]"                }
            INST_TYPE_NONE          {set arg ""                                              }
          }

      } else {
            set mnemonic "UNKNOWN"
            set arg ""
      }

      # Result of operation stored in destination register (if any)  
      # First check for exception
      set result ""
      if {$exception_taken == 1} {
        set rd     [$reg_addr]
        set value  [$new_reg_value]
        set kind   [$exception_kind]
        set result "r${rd}<=${value} ([excinfo $kind])"
      } elseif {($opcode != "invalid") && ([string first "INST_TYPE_RD" $type] == 0)} {
        if {$reg_write == 1} {
          set rd     [regRD $instr]
          set value  [$new_reg_value]
          set result "${rd}<=${value}"

          set reg ""
          if {$mnemonic == "mfs" || $mnemonic == "mfse"} { set reg [spec2 $instr] }
          if {$mnemonic == "msrset" || $mnemonic == "msrclr" } { set reg "rmsr" }
          if {$reg == "rmsr"} {
            set regtext [reginfo $value [list BE IE C BIP FSL ICE DZ DCE EE EIP PVR]]
            set result "$result $regtext"
          }
          if {$reg == "resr"} {
            set hexval 0x$value
            set ecNames [list " " "Unaligned data access" "Illegal op-code"    \
                             "Instruction bus error" "Data bus error"     \
                             "Divide by zero"        "Floating point unit"]
            set ecValue [expr $hexval & 0x1f]
            if {$ecValue > 0 && $ecValue < 7} {
              set ecText [lindex $ecNames $ecValue]
            } else {
              set ecText [format "%X" $ecValue]
            }
            set essText [format "%X" [expr ($hexval >> 5) & 0x7f]]
            set regtext "ESS=$essText EC=$ecText"
            if {($hexval & 0x1000) != 0} {set regtext "DS $regtext"}
            set result "$result ($regtext)"
          }
          if {$reg == "rfsr"} {
            set regtext [reginfo $value [list DO UF OF DZ IO]]
            set result "$result $regtext"
          }
        }
      }

      # Output formatted result
      if {$pc == "0xXXXXXXXX"} {
        set pctxt "--------"
      } else {
        set pctxt [string trimleft [format "%016x" $pc] 0]
        if {[string length $pctxt] < 8} {
          set pctxt [format "%08x" $pc]
        }
      }
      if {$result == ""} {
        set text [format "%s: %-14s%s" $pctxt $mnemonic $arg]
      } else {
        set text [format "%s: %-14s%-25s%s" $pctxt $mnemonic $arg $result]
      }
      return [string trimright $text]
    }
}

package provide xsdb::mbtrace_dis $::xsdb::mbtrace_dis::version
